type TransactionLog {
    id: ID!
    entityType: String!
    entityId: Int!
    action: String!
    workerId: Int!
    username: String!
    timestamp: String!
    description: String
    rolledBack: Boolean!
    previousState: Boolean!
    currentState: Boolean!
}

type RollbackResponse {
    success: Boolean!
    message: String!
    transactionId: String
}

input RollbackInput {
    transactionId: String!
}

input TransactionHistoryInput {
    entityType: String!
    entityId: Int
    projectId: Int
    startTime: String
    endTime: String
    limit: Int
}

input RestorePointInput {
    entityType: String!
    entityId: Int!
    timestamp: String!
}

extend type Query {
    # Get transactions that can be rolled back for a specific entity
    getRollbackCandidates(entityType: String!, entityId: Int!): [TransactionLog!]!

    # Get transaction history for a specific entity or project
    getTransactionHistory(input: TransactionHistoryInput!): [TransactionLog!]!

    # Get recent transaction history (last N hours)
    getRecentTransactionHistory(entityType: String!, entityId: Int!, hours: Int!): [TransactionLog!]!
}

extend type Mutation {
    # Rollback a specific transaction
    rollbackTransaction(input: RollbackInput!): RollbackResponse!

    # Restore an entity to a specific point in time
    restoreEntityToPoint(entityType: String!, entityId: Int!, timestamp: String!): RollbackResponse!
}